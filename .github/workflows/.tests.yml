name: .Tests

on:
 workflow_call: 
  inputs: 
    tag: 
      description: 'The tag of the containers to run tests on'
      required: true
      type: string

permissions: 
  contents: write # This is required for actions/checkout
jobs:
  backend-tests:
    name: Backend Tests
    if: (! github.event.pull_request.draft )
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - uses: bcgov-nr/action-test-and-analyse@51b50be3bb2522e480ed8eab72735612deff7f15 # v1.4.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
          NODE_ENV: unittest
        with:
          commands: |
            npm ci
            npm run test:cov
          dir: backend
          node_version: "22"
          sonar_args: >
            -Dsonar.exclusions=**/coverage/**,**/node_modules/**,**/*spec.ts
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=quickstart-aws-containers_backend
            -Dsonar.sources=src
            -Dsonar.tests.inclusions=**/*spec.ts
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
          sonar_token: ${{ env.SONAR_TOKEN }}
          triggers: ('backend/')
  
  frontend-tests:
    name: Frontend Tests
    if: (! github.event.pull_request.draft)
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - uses: bcgov/action-test-and-analyse@51b50be3bb2522e480ed8eab72735612deff7f15 # v1.4.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        with:
          commands: |
            npm ci
            npm run test:cov
          dir: frontend
          node_version: "22"
          sonar_args: >
            -Dsonar.exclusions=**/coverage/**,**/node_modules/**,**/*spec.ts
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=quickstart-openshift_frontend
            -Dsonar.sources=src
            -Dsonar.tests.inclusions=**/*spec.ts
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
          sonar_token: ${{ env.SONAR_TOKEN }}
          triggers: ('frontend/')
  trivy:
    name: Trivy Security Scan
    if: (! github.event.pull_request.draft )
    runs-on: ubuntu-24.04
    permissions:
      contents: read # This is required for actions/checkout
      security-events: write # This is required to upload SARIF results to the Security tab
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          scan-type: "fs"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@a8d1ac45b9a34d11fe398d5503176af0d06b303e # v3
        with:
          sarif_file: "trivy-results.sarif"
  e2e:
    name: E2E Tests
    uses: ./.github/workflows/.e2e.yml
    with:
      FRONTEND_URL: http://localhost:3000
      tag: ${{ inputs.tag }}