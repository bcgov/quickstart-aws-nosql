name: .ECR
on:
  workflow_call:
    inputs:
      environment:
        description: 'The name of the environment to deploy to'
        required: true
        default: 'prod'
        type: string
      tag:
        description: 'The tag of the containers to push'
        default: 'latest'
        type: string
        required: false
jobs:
  ecr:
    name:  ECR
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        package: [backend]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          role-session-name: gha-ecr-push
          aws-region: ca-central-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Pull, tag and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          GHCR_IMAGE: ghcr.io/${{ github.repository }}/${{ matrix.package }}:${{ inputs.tag }}
        run: |
          # Create ECR repository if it doesn't exist
            aws ecr create-repository \
            --repository-name ${{ github.event.repository.name }}-${{ matrix.package }} \
            --image-tag-mutability IMMUTABLE \
            --image-scanning-configuration scanOnPush=true \
            || true
            
            # Apply lifecycle policy separately
            aws ecr put-lifecycle-policy \
            --repository-name ${{ github.event.repository.name }}-${{ matrix.package }} \
            --lifecycle-policy '{"rules":[{"rulePriority":1,"description":"Keep only 5 tagged images","selection":{"tagStatus":"tagged","tagPatternList":["*"],"countType":"imageCountMoreThan","countNumber":5},"action":{"type":"expire"}},{"rulePriority":2,"description":"Remove untagged images","selection":{"tagStatus":"untagged","countType":"imageCountMoreThan","countNumber":1},"action":{"type":"expire"}}]}' \
            || true
          
          # Pull image from GHCR
          docker pull $GHCR_IMAGE || { echo "Error: Failed to pull image $GHCR_IMAGE"; exit 1; }
          
          # Tag for ECR
          ECR_IMAGE=$ECR_REGISTRY/${{ github.event.repository.name }}-${{ matrix.package }}:${{ inputs.tag }}
          docker tag $GHCR_IMAGE $ECR_IMAGE
          
          # Push to ECR
          docker push $ECR_IMAGE